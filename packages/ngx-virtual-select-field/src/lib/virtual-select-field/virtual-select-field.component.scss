@use 'sass:math';
@use '@angular/cdk';

/* #region Variables */

$noop-animation: '_mat-animation-noopable';
$container-class: 'mat-mdc-form-field';
$focused-class: 'mat-focused';

$name-prefix: 'ngx-virtual-select-field';

:host {
  color: var(--#{$name-prefix}-trigger-text-color);
  font-family: var(--#{$name-prefix}-trigger-font-family);
  line-height: var(--#{$name-prefix}-trigger-line-height);
  font-size: var(--#{$name-prefix}-trigger-font-size);
  font-weight: var(--#{$name-prefix}-trigger-font-weight);
  letter-spacing: var(--#{$name-prefix}-trigger-letter-spacing);

  outline: none;
}

/* #endregion */

/* #region Trigger */

.#{$name-prefix}-trigger {
  display: inline-flex;
  align-items: center;
  cursor: pointer;
  position: relative;
  box-sizing: border-box;
  width: 100%;

  :host-context(.#{$name-prefix}-disabled) & {
    cursor: default;
    color: var(--#{$name-prefix}-trigger-text-color--disabled);
  }
}

.#{$name-prefix}-value {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  width: 100%;
}

.#{$name-prefix}-placeholder {
  transition: var(--#{$name-prefix}-placeholder-transition);
  color: var(--#{$name-prefix}-placeholder-text-color);

  .#{$noop-animation} & {
    transition: none;
  }

  :host-context(.mat-form-field-hide-placeholder) & {
    color: transparent;
    -webkit-text-fill-color: transparent;
    transition: none;
    display: block;
  }

  &:empty::before {
    content: ' ';
    white-space: pre;
    width: 1px;
    display: inline-block;
  }
}

.#{$name-prefix}-arrow {
  width: calc(var(--#{$name-prefix}-arrow-size) * 2);
  height: var(--#{$name-prefix}-arrow-size);
  position: relative;

  color: var(--#{$name-prefix}-arrow-color--enabled);

  :host-context(.#{$name-prefix}-invalid) & {
    color: var(--#{$name-prefix}-arrow-color--invalid);
  }

  :host-context(.#{$focused-class}):not(.#{$name-prefix}-invalid) & {
    color: var(--#{$name-prefix}-arrow-color--focused);
  }

  :host-context(.#{$name-prefix}-disabled) & {
    color: var(--#{$name-prefix}-arrow-color--disabled);
  }

  svg {
    fill: currentColor;
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);

    @include cdk.high-contrast(active, off) {
      // On Chromium browsers the `currentColor` blends in with the
      // background for SVGs so we have to fall back to `CanvasText`.
      fill: CanvasText;

      :host-context(.#{$name-prefix}-disabled) & {
        fill: GrayText;
      }
    }
  }
}

.#{$name-prefix}-arrow-wrapper {
  height: 24px;
  flex-shrink: 0;
  display: inline-flex;
  align-items: center;

  :host-context(.mat-form-field-appearance-fill) & {
    transform: translateY(-8px);
  }

  :host-context(.mat-form-field-appearance-fill .mdc-text-field--no-label) & {
    transform: none;
  }
}

/* #endregion */

/* #region Panel */

.#{$name-prefix} {
  &-panel {
    width: 100%;
    height: calc(
      var(--#{$name-prefix}__viewport-option-height) * var(--#{$name-prefix}__viewport-page-size) +
        var(--#{$name-prefix}-panel-list-wrapper-padding) * 2
    );
    background: var(--#{$name-prefix}-panel-background);
    box-shadow: var(--#{$name-prefix}-panel-box-shadow);

    @include cdk.high-contrast(active, off) {
      outline: solid 1px;
    }
  }

  &-list-wrapper {
    display: flex;
    flex-direction: column;
    padding-top: var(--#{$name-prefix}-panel-list-wrapper-padding);
    padding-bottom: var(--#{$name-prefix}-panel-list-wrapper-padding);
  }
}

/* #endregion */
